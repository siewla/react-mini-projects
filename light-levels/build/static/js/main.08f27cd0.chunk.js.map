{"version":3,"sources":["Components/Controls.js","Components/Light.js","Components/App.js","index.js"],"names":["Controls","props","lightButtons","controls","map","d","i","key","onClick","button","dispatch","type","action","name","styled","div","clicks","className","Lights","console","log","Light","color","intitialState","lightValues","activeLight","numberOfClicks","lightReducer","state","App","useReducer","rootElement","document","getElementById","ReactDOM","render"],"mappings":"kRAgCeA,I,EAAAA,EA7Bf,SAAkBC,GAEhB,IAIMC,EAAeD,EAAME,SAASC,KAAI,SAACC,EAAGC,GAC1C,OACE,4BAAQC,IAAKD,EAAGE,QAAS,kBANRC,EAM0BJ,OAL7CJ,EAAMS,SAAS,CAACC,KAAMF,EAAOG,SADX,IAACH,IAOdJ,EAAEQ,SAKHb,EAAWc,IAAOC,IAAV,iDAId,OACE,6BACE,kBAACf,EAAD,KAAWE,GACX,gDAAsBD,EAAMe,QAC5B,4BAAQC,UAAU,QAAQT,QAAS,kBAAMP,EAAMS,SAAS,CAACC,KAAM,YAA/D,WCLSO,MAjBf,SAAgBjB,GACdkB,QAAQC,IAAI,iBAAiBnB,GAE7B,IAAMoB,EAAQP,IAAOC,IAAV,+JAMId,EAAMqB,OAGrB,OACC,kBAACD,EAAD,OCZCE,EAAgB,CAClBC,YAAa,CACX,CAAEX,KAAM,MAAOS,MAAO,gBAAiBV,OAAQ,WAC/C,CAAEC,KAAM,MAAOS,MAAO,iBAAkBV,OAAQ,WAChD,CAAEC,KAAM,MAAOS,MAAO,iBAAkBV,OAAQ,WAChD,CAAEC,KAAM,OAAQS,MAAO,iBAAkBV,OAAQ,aAEnDa,YAAY,CAACZ,KAAM,MAAOS,MAAO,iBACjCI,eAAgB,GAGZC,EAAe,SAACC,EAAOhB,GAC3B,OAAQA,EAAOD,MACb,IAAK,UACH,OAAO,2BACFiB,GADL,IAEEH,YAAaG,EAAMJ,YAAY,GAC/BE,eAAgBE,EAAMF,gBAAkB,IAE5C,IAAK,UACH,OAAO,2BACFE,GADL,IAEEH,YAAaG,EAAMJ,YAAY,GAC/BE,eAAgBE,EAAMF,gBAAkB,IAE5C,IAAK,UACH,OAAO,2BACFE,GADL,IAEEH,YAAaG,EAAMJ,YAAY,GAC/BE,eAAgBE,EAAMF,gBAAkB,IAE5C,IAAK,WACH,OAAO,2BACFE,GADL,IAEEH,YAAaG,EAAMJ,YAAY,GAC/BE,eAAgBE,EAAMF,gBAAkB,IAE5C,IAAK,QACH,OAAO,2BACFE,GADL,IAEEH,YAAaG,EAAMJ,YAAY,GAC/BE,eAAgBE,EAAMF,eAAiB,IAE3C,QACE,OAAO,2BACFE,GADL,IAEEH,YAAaG,EAAMJ,YAAY,GAC/BE,eAAgBE,EAAMF,mBAqBfG,MAhBf,WAEE,MAA0BC,qBAAWH,EAAaJ,GAAlD,mBAAOK,EAAP,KAAclB,EAAd,KAEA,OACE,yBAAKO,UAAU,OACb,kBAAC,EAAD,CACED,OAAQY,EAAMF,eACdvB,SAAUyB,EAAMJ,YAChBd,SAAUA,IAEZ,kBAAC,EAAD,CAAOY,MAAOM,EAAMH,YAAYH,UC7DhCS,G,MAAcC,SAASC,eAAe,SAC5CC,IAASC,OAAO,kBAAC,EAAD,MAASJ,K","file":"static/js/main.08f27cd0.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nfunction Controls(props) {\n\n  const handleClick = (button) => {\n    props.dispatch({type: button.action});\n  };\n\n  const lightButtons = props.controls.map((d, i) => {\n    return (\n      <button key={i} onClick={() => handleClick(d)}>\n        {d.name}\n      </button>\n    );\n  });\n\n  const Controls = styled.div`\n    margin: 20px;\n  `\n\n  return (\n    <div>\n      <Controls>{lightButtons}</Controls>\n      <p>Number of clicks: {props.clicks}</p>\n      <button className=\"reset\" onClick={() => props.dispatch({type: 'RESET'})}>\n        Reset\n      </button>\n    </div>\n  );\n}\n\nexport default Controls;\n","import React from 'react'\nimport styled from 'styled-components'\n\nfunction Lights(props) {\n  console.log('Lights - props',props)\n\n  const Light = styled.div`\n    width: 100px;\n    height: 100px;\n    border-radius: 50%;\n    border: '1px solid';\n    color:white;\n    background:${props.color} ;\n  `\n  \n  return (\n   <Light />\n  )\n}\n\nexport default Lights","import React, {useReducer} from \"react\";\nimport Controls from './Controls'\nimport Light from './Light'\n\nlet intitialState = {\n  lightValues: [\n    { name: 'off', color: 'rgba(0,0,0,1)', action: 'SET_OFF' },\n    { name: 'low', color: 'rgba(0,0,0,.6)', action: 'SET_LOW' },\n    { name: 'med', color: 'rgba(0,0,0,.4)', action: 'SET_MED' },\n    { name: 'high', color: 'rgba(0,0,0,.1)', action: 'SET_HIGH' }\n  ], \n  activeLight:{name: 'off', color: 'rgba(0,0,0,1)'},\n  numberOfClicks: 0\n}\n\nconst lightReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_OFF':\n      return {\n        ...state,\n        activeLight: state.lightValues[0],\n        numberOfClicks: state.numberOfClicks += 1\n      };\n    case 'SET_LOW':\n      return {\n        ...state,\n        activeLight: state.lightValues[1],\n        numberOfClicks: state.numberOfClicks += 1\n      };\n    case 'SET_MED':\n      return {\n        ...state,\n        activeLight: state.lightValues[2],\n        numberOfClicks: state.numberOfClicks += 1\n      };\n    case 'SET_HIGH':\n      return {\n        ...state,\n        activeLight: state.lightValues[3],\n        numberOfClicks: state.numberOfClicks += 1\n      };\n    case 'RESET':\n      return {\n        ...state,\n        activeLight: state.lightValues[0],\n        numberOfClicks: state.numberOfClicks = 0\n      };\n    default:\n      return {\n        ...state,\n        activeLight: state.lightValues[0],\n        numberOfClicks: state.numberOfClicks\n      };\n  }\n}\n\nfunction App() {\n\n  const [state, dispatch] = useReducer(lightReducer,intitialState)\n\n  return (\n    <div className=\"App\">\n      <Controls \n        clicks={state.numberOfClicks} \n        controls={state.lightValues} \n        dispatch={dispatch}\n      />\n      <Light color={state.activeLight.color}/>\n    </div>\n  );\n}\n\nexport default App","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from './Components/App'\n\nimport \"./styles.css\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}