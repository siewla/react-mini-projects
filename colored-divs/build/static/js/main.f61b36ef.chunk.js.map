{"version":3,"sources":["ColoredDiv.js","App.js","index.js"],"names":["ColoredDiv","props","useState","window","innerWidth","width","setWidth","updateWidth","styles","background","color","flex","useEffect","addEventListener","style","className","App","colors","colorsArr","map","d","i","index","ReactDOM","render","document","getElementById"],"mappings":"kMA6BeA,EA3BI,SAACC,GAClB,MAA0BC,mBAASC,OAAOC,YAA1C,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAc,WAClBD,EAASH,OAAOC,aAGdI,EAAS,CACXC,WAAYR,EAAMS,MAElBC,KAAMN,EAAQ,IAAM,IAAM,KAO5B,OAJAO,qBAAU,WACRT,OAAOU,iBAAiB,SAAUN,KACjC,IAGD,mCACE,sBAAKO,MAAON,EAAQO,UAAU,cAA9B,UACGd,EAAMS,MACP,kDCMOM,MA1Bf,WACE,MAA4Bd,mBAAS,CAAC,aAAc,OAAQ,cAA5D,mBAAOe,EAAP,KACA,GADA,KAC0Bf,mBAASC,OAAOC,aAA1C,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAc,WAElBD,EAASH,OAAOC,aAGZc,EAAYD,EAAOE,KAAI,SAACC,EAAGC,GAC/B,OAAO,cAAC,EAAD,CAAYX,MAAOU,EAAWE,MAAOD,GAAVA,MAOpC,OAJAT,qBAAU,WACRT,OAAOU,iBAAiB,SAAUN,KACjC,IAGD,sBAAKQ,UAAU,MAAf,UACE,wDAA2BV,KAC3B,qBAAKU,UAAU,eAAf,SAA+BG,IAC/B,uDCnBNK,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.f61b36ef.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst ColoredDiv = (props) => {\n  const [width, setWidth] = useState(window.innerWidth);\n\n  const updateWidth = () => {\n    setWidth(window.innerWidth);\n  };\n\n  let styles = {\n    background: props.color,\n    // add conditional logic here\n    flex: width > 700 ? \"1\" : \"0\",\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", updateWidth);\n  }, []);\n\n  return (\n    <>\n      <div style={styles} className=\"colored-div\">\n        {props.color}\n        <button>Remove</button>\n      </div>\n    </>\n  );\n};\n\nexport default ColoredDiv;\n","import React, { useEffect, useState } from \"react\";\nimport ColoredDiv from \"./ColoredDiv\";\n\nfunction App() {\n  const [colors, setColors] = useState([\"lightgreen\", \"pink\", \"lightblue\"]);\n  const [width, setWidth] = useState(window.innerWidth);\n\n  const updateWidth = () => {\n    // console.log(\"running update width\");\n    setWidth(window.innerWidth);\n  };\n\n  const colorsArr = colors.map((d, i) => {\n    return <ColoredDiv color={d} key={i} index={i} />;\n  });\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", updateWidth);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Current Window Width: {width}</h1>\n      <div className=\"colored-divs\">{colorsArr}</div>\n      <button>Add New Color</button>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}