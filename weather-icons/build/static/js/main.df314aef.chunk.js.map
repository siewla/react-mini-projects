{"version":3,"sources":["weatherData.js","Components/WeatherIcon.jsx","Components/WeatherData.jsx","Components/WeatherIcons.jsx","App.js","index.js"],"names":["weatherData","imgUrl","condition","time","WeatherIcon","src","alt","WeatherData","WeatherIcons","className","App","map","weather","idx","key","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"2PAAaA,G,KAAc,CACzB,CACEC,OACE,qEACFC,UAAW,QACXC,KAAM,OAGR,CACEF,OACE,uEACFC,UAAW,QACXC,KAAM,OAER,CACEF,OACE,wEACFC,UAAW,QACXC,KAAM,OAER,CACEF,OACE,mFACFC,UAAW,eACXC,KAAM,SAER,CACEF,OACE,8EACFC,UAAW,QACXC,KAAM,SCxBKC,EAJK,SAAC,GAAgB,IAAdH,EAAa,EAAbA,OACrB,OAAO,yBAAKI,IAAKJ,EAAQK,IAAI,MCYhBC,EAbK,SAAC,GAAyB,IAAvBL,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,KAChC,OACE,oCACE,2BACE,6CADF,IAC4BD,GAE5B,2BACE,uCADF,IACsBC,KCIbK,EATM,SAAC,GAAiC,IAA/BP,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,KACzC,OACE,yBAAKM,UAAU,WACb,kBAAC,EAAD,CAAaR,OAAQA,IACrB,kBAAC,EAAD,CAAaC,UAAWA,EAAWC,KAAMA,MCiBhCO,EApBH,WACV,OACE,yBAAKD,UAAU,OACb,mDACA,iCACGT,EAAYW,KAAI,SAACC,EAASC,GACzB,OACE,kBAAC,EAAD,CACEC,IAAKD,EACLZ,OAAQW,EAAQX,OAChBC,UAAWU,EAAQV,UACnBC,KAAMS,EAAQT,aCXtBY,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFL,K","file":"static/js/main.df314aef.chunk.js","sourcesContent":["export const weatherData = [\n  {\n    imgUrl:\n      \"http://res.cloudinary.com/jkeohan/image/upload/v1535732381/day.svg\",\n    condition: \"sunny\",\n    time: \"day\",\n  },\n\n  {\n    imgUrl:\n      \"http://res.cloudinary.com/jkeohan/image/upload/v1535732381/night.svg\",\n    condition: \"clear\",\n    time: \"day\",\n  },\n  {\n    imgUrl:\n      \"http://res.cloudinary.com/jkeohan/image/upload/v1535732381/stormy.svg\",\n    condition: \"clear\",\n    time: \"day\",\n  },\n  {\n    imgUrl:\n      \"http://res.cloudinary.com/jkeohan/image/upload/v1535732381/cloudy-day_t7ckxp.svg\",\n    condition: \"partly sunny\",\n    time: \"night\",\n  },\n  {\n    imgUrl:\n      \"http://res.cloudinary.com/jkeohan/image/upload/v1535732381/cloudy-night.svg\",\n    condition: \"clear\",\n    time: \"day\",\n  },\n];\n","import React from \"react\";\n\nconst WeatherIcon = ({ imgUrl }) => {\n  return <img src={imgUrl} alt=\"\" />;\n};\n\nexport default WeatherIcon;\n","import React from \"react\";\n\nconst WeatherData = ({ condition, time }) => {\n  return (\n    <>\n      <p>\n        <span>conditions:</span> {condition}\n      </p>\n      <p>\n        <span>time:</span> {time}\n      </p>\n    </>\n  );\n};\n\nexport default WeatherData;\n","import React from \"react\";\nimport WeatherIcon from \"./WeatherIcon\";\nimport WeatherData from \"./WeatherData\";\n\nconst WeatherIcons = ({ imgUrl, condition, time }) => {\n  return (\n    <div className=\"weather\">\n      <WeatherIcon imgUrl={imgUrl} />\n      <WeatherData condition={condition} time={time} />\n    </div>\n  );\n};\n\nexport default WeatherIcons;\n","import React from \"react\";\nimport \"./styles.css\";\nimport { weatherData } from \"./weatherData\";\nimport WeatherIcons from \"./Components/WeatherIcons\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <h1>My WeatherIcons App</h1>\n      <section>\n        {weatherData.map((weather, idx) => {\n          return (\n            <WeatherIcons\n              key={idx}\n              imgUrl={weather.imgUrl}\n              condition={weather.condition}\n              time={weather.time}\n            />\n          );\n        })}\n      </section>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}